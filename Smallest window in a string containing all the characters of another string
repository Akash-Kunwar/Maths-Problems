def valid(pat, string):  
    len1 = len(string)  
    len2 = len(pat)   
    if len1 < len2:
        return 0  
  
    hash_pat = [0] * 26 
    hash_str = [0] * 26  
  
    for i in range(0, len2):  
        hash_pat[ord(pat[i])-97] += 1
  
    start, start_index, min_len = 0, -1, float('inf')  
  
    count = 0 
    for j in range(0, len1):  
        hash_str[ord(string[j])-97] += 1  
        if (hash_pat[ord(string[j])-97] != 0 and
            hash_str[ord(string[j])-97] <= 
            hash_pat[ord(string[j])-97]):  
            count += 1
  
        if count == len2:  
            while (hash_str[ord(string[start])-97] >  
                   hash_pat[ord(string[start])-97] or
                   hash_pat[ord(string[start])-97] == 0):  
              
                if (hash_str[ord(string[start])-97] >  
                    hash_pat[ord(string[start])-97]):  
                    hash_str[ord(string[start])-97] -= 1
                start += 1
              
            len_window = j - start + 1
            if min_len > len_window:  
              
                min_len = len_window  
                start_index = start  
    if start_index == -1:
        return 0 
    return min_len==len2 







print(valid('htc','hxtcczht'))
        
